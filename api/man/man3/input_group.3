.TH "Input and Parsing" 3 "Fri Dec 5 2014" "Version hparser-1.0.0" "hparser" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Input and Parsing \- 
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBstandard_input\fP"
.br
.RI "\fIStandard input interface\&.
.PP
This class is not yet written! \fP"
.ti -1c
.RI "class \fBdata_input\fP"
.br
.RI "\fIData input source\&.
.PP
This class serves as a generic input interface for data being parsed\&. It provides minimal functionality which can be used in various combinations to handle nearly all imaginable formats of information\&. \fP"
.ti -1c
.RI "class \fBinput_receiver\fP"
.br
.RI "\fIData input interface\&.
.PP
This class serves as the input interface of tree elements\&. The functions provided are for receiving and processing input data for self-assembling trees\&. This is the significant base object for input parsing and deals with data pertaining to its own element and any direct sub-elements\&. Input objects are implementation defined\&. \fP"
.ti -1c
.RI "class \fBdata_importer\fP"
.br
.RI "\fIData importation manager\&.
.PP
This class is to manage the importation of an entire set of data\&. This should serve as a part of the base of a tree and should receive initial control of \fBdata_input\fP\&. Depending on the implementation, it should create the highest element (which should contain all other elements) and should allow the rest of the tree to self assemble using the \fBinput_receiver\fP functions receive_data and expand_data\&. \fP"
.ti -1c
.RI "class \fBfile_input\fP"
.br
.RI "\fIFile input source\&.
.PP
This is a convenience class for implementing both \fBdata_input\fP and \fBfile_user\fP in the same object\&. \fP"
.ti -1c
.RI "class \fBdescriptor_input\fP"
.br
.RI "\fIInput interface for descriptor-formated sections\&.
.PP
This class provides a simple interface for parsing data that uses a descriptor-style format (where each section's header contains all information pertaining to the section's size\&.) This interface must be combined virtually with an element class in order to be useful\&. \fP"
.ti -1c
.RI "class \fBmanaged_input\fP"
.br
.RI "\fICommon formatted-input functions\&.
.PP
This class provides the basic functions required for format classes to automatically parse input\&. This is the minimum interface required by all format classes provided\&. \fP"
.ti -1c
.RI "class \fBtagged_input\fP"
.br
.RI "\fIInput interface for tag-formated sections\&.
.PP
This class provides a simple interface for parsing data that uses a tagged (e\&.g\&. XML) format\&. This interface must be combined virtually with an element class in order to be useful\&. \fP"
.ti -1c
.RI "class \fBinput_control\fP"
.br
.RI "\fIData input recursion control\&.
.PP
This class provides recursion control to input interface classes\&. \fP"
.ti -1c
.RI "class \fBinput_manager\fP"
.br
.RI "\fIAutomatic data importer\&.
.PP
This class automates input of data for construction of a tree\&. \fP"
.ti -1c
.RI "class \fBinput_resource\fP"
.br
.RI "\fIRandom-access input resource\&.
.PP
This class provides a random-access input interface\&. \fP"
.ti -1c
.RI "class \fBinput_resource_owner\fP"
.br
.RI "\fIRandom-access input resource owner\&.
.PP
This class provides an interface for providing an input resource\&. \fP"
.ti -1c
.RI "class \fBmulti_input\fP"
.br
.RI "\fIInterchangable input interface\&.
.PP
This class provides an abstract interface for objects with interchangable input interfaces\&. The means of interface changing is up to the derived class\&. This class polls an abstract function for the current interface\&. \fP"
.ti -1c
.RI "class \fBmulti_output\fP"
.br
.RI "\fIInterchangable output interface\&.
.PP
This class provides an abstract interface for objects with interchangable output interfaces\&. The means of interface changing is up to the derived class\&. This class polls an abstract function for the current interface\&. \fP"
.ti -1c
.RI "class \fBmulti_source\fP"
.br
.RI "\fIMultiple-source data input\&.
.PP
This class serves as an input source selector\&. The deriving class will generally have more than one \fBdata_input\fP built in and will select one of the sources for a particular input operation based on that class' own criteria\&. \fP"
.ti -1c
.RI "class \fBscope_locator\fP"
.br
.RI "\fIScope-controllable object\&.
.PP
This class provides basic functionality to manage parsing scopes for a hierarchy\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBimport_data\fP (\fBdata_importer\fP *, \fBdata_input\fP *)"
.br
.RI "\fIData importation request\&.
.PP
This function imports data from a \fBdata_input\fP and sends it to the \fBdata_importer\fP\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "bool import_data (\fBdata_importer\fP *, \fBdata_input\fP *)"

.PP
\fBSee also:\fP
.RS 4
\fBexport_data\fP provides complimentary output functionality\&.
.PP
\fBload_file\fP provides corresponding file import functionality\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for hparser from the source code\&.
