This is the second descriptor example.  This example parses a file sectioned
into tables and data sections much like the first example.  Each section is
preceded by a descriptor like the first example, however the size given for
tables denotes the entire size of the table in bytes.  This includes all of its
subsections and their descriptors.  For this reason, we can't format the input
or output files with newlines and tabs like we did with the other example.

Build this example with 'make'.  This example uses several of the files from
'../common', which contains classes used by multiple examples.

Once you've built this example, execute it with 'descr2 sample-in sample-out'.
This will parse 'sample-in' and export it to 'sample-out'.  You can verify that
the data was exported correctly by executing 'descr2 sample-out'.

To demonstrate erroneous data handling, change or remove parts of 'sample-in'.
The program should stop parsing upon encountering the error, however the parts
of the structure already assembled should be able to export a valid file which
can be correctly parsed (without the data following the error.)

Like the first example, this type of parsing can be easily modified to parse
binary-format files.
