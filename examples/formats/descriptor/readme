This is the first descriptor example.  This example parses a file sectioned into
tables and data sections.  Each section is preceded by a descriptor which
identifies what type the section is, what size it is, and it's title.  For a
data section, the size is the number of bytes of data.  For a table section, the
size is the number of subsections (to include other tables.)

Build this example with 'make'.  This example uses several of the files from
'../common', which contains classes used by multiple examples.

Once you've built this example, execute it with 'descr sample-in sample-out'.
This will parse 'sample-in' and export it to 'sample-out'.  You can verify that
the data was exported correctly by executing 'descr sample-out'.

To demonstrate erroneous data handling, change or remove parts of 'sample-in'.
The program should stop parsing upon encountering the error, however the parts
of the structure already assembled should be able to export a valid file which
can be correctly parsed (without the data following the error.)

Although this example parses text files, this type of parsing can be easily
modified to parse binary data.  You would merely have to change the input
interface to read in binary mode and redefine the descriptor class to read a
binary descriptor.
